assert:
0.作用:assert在很多编程语言中的用途都是断言
1.两种使用方式:
	0):assert BooleanCondition;
	判断其后的语句是否为真,若为真,继续执行代码,若为假,抛出AssertionError
	1):assert BooleanCondition:expression
	判断其后的语句是否为真,若为真,继续执行代码,但并不执行":"后的代码,若为假,执行":"后的代码,并抛出AssertionError
2.使用场景:
	清楚某些异常正常的情况下绝对不会发生,但在经过反射，动态代理等方式后,某些关键值发生改变，出现异常场景。
	为了保护这些场景,assert可以有效的通过配置项，控制这段代码是否生效,比起if语句相对比较简单方便。



synchronized:
0.作用:
	用于实现同步,线程进入同步代码块或方法的时候会自动获得该锁，在退出同步代码块或方法时会释放该锁。
	获得内置锁的唯一途径就是进入这个锁的保护的同步代码块或方法。
1.使用方式:
	0):synchronized修饰方法
	1):synchronized修饰代码块
2.使用场景:
	0):对象锁的synchronized修饰方法和代码块
		对象锁是用于对象实例方法，或者一个对象实例上的,类的对象实例可以有很多个，不同对象实例的对象锁是互不干扰的，
	1):类锁的修饰（静态）方法和代码块
		类锁是用于类的静态方法或者一个类的class对象上的,每个类只有一个class对象,因此每个类只有一个类锁,
		类锁并不是真实存在的，它只是用来帮助我们理解锁定实例方法和静态方法的区别的
